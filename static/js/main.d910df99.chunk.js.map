{"version":3,"sources":["Components/ContactForm/Contacts.module.css","Components/FilterInput/Filter.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactTemplate.js","Components/ContactList/ContactList.js","Components/FilterInput/FilterInput.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","InputForm","state","name","number","handleInputChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","props","addContactOnSubmit","reset","nameInputId","shortid","generate","numberInputId","className","f","forma","onSubmit","this","forma__label","htmlFor","forma__input","type","pattern","title","required","onChange","id","forma__btn","Component","ContactItem","onDeleteContact","s","contact","contact__item","contact__btn","onClick","ContactList","contacts","map","Filter","filteredID","filter__input","App","filter","onSubmitAddContact","data","find","alert","prevState","deleteContact","getvisibleContacts","normalizedFilter","toLowerCase","includes","filterContacts","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d910df99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__1pjZT\",\"forma__input\":\"Contacts_forma__input__2hPsu\",\"forma__btn\":\"Contacts_forma__btn__3SH0a\",\"forma__label\":\"Contacts_forma__label__3kD5f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__Ls0Ou\"};","import react, { Component } from \"react\";\r\nimport shortid from 'shortid';\r\nimport f from './Contacts.module.css';\r\nclass InputForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\nhandleSubmit = e => {\r\n        e.preventDefault();\r\n  this.props.addContactOnSubmit(this.state)\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        });\r\n    };\r\n    \r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    render() {\r\n        return (\r\n          <div className={f.forma}>\r\n          <form onSubmit={this.handleSubmit} >\r\n          <label className={f.forma__label} htmlFor={this.nameInputId}>\r\n            NAME\r\n            <input className={f.forma__input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n                        onChange={this.handleInputChange}\r\n                        id={this.nameInputId}\r\n            />\r\n          </label>\r\n\r\n          <label className={f.forma__label} htmlFor={this.numberInputId} >\r\n            NUMBER\r\n            <input className={f.forma__input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n                        onChange={this.handleInputChange}\r\n                        id={this.numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button className={f.forma__btn} type=\"submit\">Add Contact</button>\r\n        </form>\r\n</div>\r\n        )\r\n    };\r\n};\r\n\r\nexport default InputForm; ","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\n\r\nexport default function ContactItem({id, name, number, onDeleteContact}) {\r\n    return (\r\n        <>\r\n        <li className={s.contact}>\r\n            <span className={s.contact__item}>{name}</span>\r\n            <span className={s.contact__item}>{number}</span>\r\n             <button className={s.contact__btn}  type=\"button\" onClick={() => onDeleteContact(id)} >Delete</button>    \r\n            </li>\r\n        </>\r\n        )\r\n};\r\n\r\nContactItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};","\r\nimport ContactItem from './ContactTemplate'\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\n\r\nexport default function ContactList({ contacts , onDeleteContact }) {\r\n    return (\r\n        <ul > {\r\n            contacts.map(({ id, name, number }) => (\r\n                <ContactItem\r\n                    key={id}\r\n                    id={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={onDeleteContact}\r\n                />\r\n            ))\r\n        }\r\n       \r\n            </ul> \r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n}\r\n ","import shortid from \"shortid\";\r\nimport PropTypes from 'prop-types';\r\nimport f from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n    const filteredID = shortid.generate();\r\n    return (\r\n        <>\r\n            <label htmlFor={filteredID}>Find contacts by name\r\n                <input type=\"text\"\r\n                    id={filteredID}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className={f.filter__input}\r\n                \r\n                />\r\n            \r\n            </label>\r\n        </>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onchange: PropTypes.func,\r\n}","import react, { Component } from 'react';\nimport InputForm from './Components/ContactForm';\nimport shortid from 'shortid';\nimport { ContactList } from './Components/ContactList';\nimport Filter from './Components/FilterInput';\nimport s from './Components/ContactForm/Contacts.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  // Забираем контакты с локал сторедж\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n}\n\n\n  // Добавляем контакты в локал сторедж\n  componentDidUpdate() {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n      }\n\n\n\n\n  onSubmitAddContact = data => {\n    if (this.state.contacts.find(contact => contact.name === data.name)) {\n      return alert(`${data.name} is alredy in contacts`);\n    } else {\n      data.id = shortid.generate();\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, data],\n      }));\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => {\n        return contact.id !== id;\n      })\n    }));\n  };\n\n\n\n  getvisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );    \n}\n\n  filterContacts = (e) => {\n    this.setState({filter: e.currentTarget.value})\n  }\n  \n  render() {\n    const visibleContacts = this.getvisibleContacts();\n    const { filter } = this.state;\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <InputForm addContactOnSubmit={this.onSubmitAddContact} />\n        <h2>Contacts</h2>\n        <Filter\n          value={filter}\n          onChange={this.filterContacts}/>\n        <ContactList\n          onDeleteContact={this.deleteContact}\n          contacts={visibleContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactList_contact__item__3kYjb\",\"contact\":\"ContactList_contact__2rpnt\",\"contact__btn\":\"ContactList_contact__btn__1ZJLK\"};"],"sourceRoot":""}